#!/bin/bash
set -e

# Install packages if needed
sudo apt install -y gawk

# Build openwrt image
MODEL=$1
VERSION=23.05.3
BUILDDIR=/tmp/openwrt-build
BASE_PACKAGES=" \
  base-files \
  busybox \
  ca-bundle \
  dnsmasq \
  dropbear \
  firewall4 \
  fstools \
  kmod-gpio-button-hotplug \
  kmod-leds-gpio \
  kmod-nft-offload \
  libc \
  libgcc \
  libustream-mbedtls \
  logd \
  mtd \
  netifd \
  nftables \
  odhcp6c \
  opkg \
  ppp \
  ppp-mod-pppoe \
  procd \
  procd-seccomp \
  procd-ujail \
  swconfig \
  uci \
  uclient-fetch \
  urandom-seed \
  urngd \
  openssh-sftp-server\
  "

# For the gl-ar300m case, modify the EXTRA_PACKAGES:
case $MODEL in
"gl-mt300n-v2")
  PLATFORM=ramips
  TYPE=mt76x8
  TARGET_DEVICE=ramips-mt76x8
  PROFILE=glinet_gl-mt300n-v2
  EXTRA_PACKAGES="\
    uboot-envtools \
    watchcat \
    luci \
    luci-ssl \
  "     # opennds \
  REMOVED_PACKAGES="\
    -odhcpd \
    -odhcpd-ipv6only \
    "
;;

"gl-ar300m")
  PLATFORM=ath79
  TYPE=generic
  TARGET_DEVICE=ath79-generic
  PROFILE=glinet_gl-ar300m16
  EXTRA_PACKAGES="\
    uboot-envtools \
    kmod-usb2 \
    kmod-usb-core \
    kmod-usb-storage \
    luci \
    luci-ssl \
    iwinfo \
    wpad-wolfssl \
    "
  REMOVED_PACKAGES="\
    -odhcpd \
    -odhcpd-ipv6only \
    -wpad-basic-wolfssl \
    -wpad-basic-mbedtls \
    -wpad-mini \
    "
;;

"gl-mt3000")
  PLATFORM=mediatek
  TYPE=filogic
  TARGET_DEVICE=mediatek-filogic
  PROFILE=glinet_gl-mt3000
  EXTRA_PACKAGES="\
    kmod-usb2 \
    kmod-usb-core \
    kmod-usb-storage \
    luci \
    luci-ssl \
    iwinfo \
    wpad-wolfssl \
    "
  REMOVED_PACKAGES="\
    -odhcpd \
    -odhcpd-ipv6only \
    -wpad-basic-wolfssl \
    -wpad-basic-mbedtls \
    -wpad-mini \
    "
;;

"gl-mt6000")
  PLATFORM=mediatek
  TYPE=filogic
  TARGET_DEVICE=mediatek-filogic
  PROFILE=glinet_gl-mt6000
  EXTRA_PACKAGES="\
    kmod-usb2 \
    kmod-usb-core \
    kmod-usb-storage \
    luci \
    luci-ssl \
    iwinfo \
    wpad-wolfssl \
    "
  REMOVED_PACKAGES="\
    -odhcpd \
    -odhcpd-ipv6only \
    -wpad-basic-wolfssl \
    -wpad-basic-mbedtls \
    -wpad-mini \
    "
;;

"gl-e750")
  VERSION="snapshot"
  PLATFORM=ath79
  TYPE=nand
  TARGET_DEVICE=ath79-nand
  PROFILE=glinet_gl-e750
  EXTRA_PACKAGES="\
    kmod-usb2 \
    kmod-usb-core \
    kmod-usb-storage \
    uboot-envtools \
    "
  REMOVED_PACKAGES="\
    -odhcpd \
    -odhcpd-ipv6only \
    "
;;

"archer_mr200")
  PLATFORM=ramips
  TYPE=mt7620
  TARGET_DEVICE=ramips-mt7620
  PROFILE=tplink_archer-mr200-v1  # Make sure this profile is correct as per OpenWRT documentation
  EXTRA_PACKAGES="\
    kmod-usb2 \
    kmod-usb-core \
    luci \
    luci-ssl \
    "
  REMOVED_PACKAGES="\
    -odhcpd \
    -odhcpd-ipv6only \
    "
;;

*)
  echo "specify build target (gl-mt300n-v2, gl-ar300m, gl-mt3000, gl-mt6000, gl-e750, or archer_mr200)"
  exit 1
;;
esac

if [ ! -d ${BUILDDIR} ] ; then
  mkdir ${BUILDDIR}
fi

# the need for $TYPE and $TARGET_DEVICE seems dumb but it helps get aroudn the problem of downloads        ↓↓↓↓↓↓↓
# http://downloads.openwrt.org/releases/18.06.1/targets/ath79/generic/openwrt-imagebuilder-18.06.1-ath79-generic.Linux-x86_64.tar.xz
#http://downloads.openwrt.org/releases/18.06.1/targets/ipq40xx/generic/openwrt-imagebuilder-18.06.1-ipq40xx.Linux-x86_64.tar.xz

if [ "$VERSION" = "snapshot" ]; then
  IMAGEBUILDER_NAME="openwrt-imagebuilder-${PLATFORM}-${TYPE}.Linux-x86_64"
  DOWNLOAD_URL="https://downloads.openwrt.org/snapshots/targets/${PLATFORM}/${TYPE}/${IMAGEBUILDER_NAME}.tar.zst"
  ARCHIVE_EXT="tar.zst"
else
  IMAGEBUILDER_NAME="openwrt-imagebuilder-${VERSION}-${TARGET_DEVICE}.Linux-x86_64"
  DOWNLOAD_URL="https://downloads.openwrt.org/releases/${VERSION}/targets/${PLATFORM}/${TYPE}/${IMAGEBUILDER_NAME}.tar.xz"
  ARCHIVE_EXT="tar.xz"
fi

if [ ! -d ${BUILDDIR}/${IMAGEBUILDER_NAME} ] ; then
  if [ ! -f ${BUILDDIR}/${IMAGEBUILDER_NAME}.${ARCHIVE_EXT} ]; then
   (cd ${BUILDDIR} && curl -C - -O ${DOWNLOAD_URL})
  fi

  if [ "$VERSION" = "snapshot" ]; then
    tar --zstd -xf ${BUILDDIR}/${IMAGEBUILDER_NAME}.${ARCHIVE_EXT} -C ${BUILDDIR}/
  else
    tar xfJ ${BUILDDIR}/${IMAGEBUILDER_NAME}.${ARCHIVE_EXT} -C ${BUILDDIR}/
  fi
fi

COMBINED_PACKAGE_LIST="`echo ${REMOVED_PACKAGES}` `echo ${BASE_PACKAGES}` `echo ${EXTRA_PACKAGES}`"
echo "Combined package list ${COMBINED_PACKAGE_LIST}"

CORES=$(nproc)

echo "Building ${VERSION} using ${CORES} cores..."
( cd ${BUILDDIR}/${IMAGEBUILDER_NAME} && sudo make -j${CORES} image PROFILE="$PROFILE" PACKAGES="$COMBINED_PACKAGE_LIST" )

echo "scp -O ${BUILDDIR}/${IMAGEBUILDER_NAME}/bin/targets/${PLATFORM}/${TYPE}/openwrt-${TARGET_DEVICE}-${PROFILE}-squashfs-sysupgrade.bin root@<dest>:/tmp"
